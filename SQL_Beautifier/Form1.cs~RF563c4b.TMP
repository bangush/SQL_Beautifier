using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace SQL_Beautifier
{
  public partial class FormTab : Form
  {
    string[] keywords = { "SELECT", "FROM", "WHERE", "LEFT OUTER JOIN", "LEFT JOIN", "ORDER BY", "INNER JOIN" };

    public FormTab()
    {
      InitializeComponent();
      rbQuoteify.Checked = true;
      listViewKeywords.View = View.Details;
      listViewKeywords.Columns.Add("Keywords");
      foreach (string keyword in keywords)
        listViewKeywords.Items.Add(keyword);
    }

    private void radioButton1_CheckedChanged(object sender, EventArgs e)
    {
      button1.Text = rbQuoteify.Text;
    }

    private void radioButton2_CheckedChanged(object sender, EventArgs e)
    {
      button1.Text = rbUnquoteify.Text;
    }
    
    private void rbCommafy_CheckedChanged(object sender, EventArgs e)
    {
      button1.Text = rbCommafy.Text;
    }

    private void button1_Click(object sender, EventArgs e)
    {
      string[] lines = textBoxSQL.Text.Split(new string[] { Environment.NewLine }, StringSplitOptions.None);
      string result = string.Empty;


      switch (comboBox1.Text)
      {
        case "Beautify":
          result = Beautify(lines);
          break;
        case "Quoteify":
          result = Quoteify(lines);
          break;
        case "Unquoteify":
          result = Unquoteify(lines);
          break;
        case "Commafy":
          result = Commafy(lines);
          break;
        default:
          result = "You haven't made a combobox choice. PANIC!!!";
          break;
      }

      textBoxSQL.Text = result;
    }
    public string Beautify(string[] lines)
    {
      string result = string.Empty;

      foreach (string line in lines)
      {
        string temp = line.Replace("\n", String.Empty);
        temp = temp.Replace(" ", String.Empty);
      }

      string[] keywordsWithoutSpaces = RemoveSpacesFromList(keywords);


      foreach (string keyword in keywordsWithoutSpaces)
      {
        if (keyword.Equals("SELECT")) result = result.Replace(keyword, keyword + " ");
        else result = result.Replace(keyword, "\r\n" + keyword + " ");
      }

      result = result.Replace(",", ", ");
      result = result.Replace("LEFTOUTERJOIN", "LEFT OUTER JOIN");
      result = result.Replace("INNERJOIN", "INNER JOIN");
      result = result.Replace("LEFTJOIN", "LEFT JOIN");
      result = result.Replace("ORDERBY", "ORDER BY");
      result = result.Replace("AND", " AND ");
      result = result.Replace("ON", " ON ");

      return result;
    }

    public string Commafy(string[] lines)
    {
      string comma_part = string.Empty;
      for (int i = 1; i < lines.Length - 2; i++)
        comma_part += "'" + lines[i] + "', ";

      comma_part += "'" + lines[lines.Length - 1] + "'";

      return "WHERE " + lines[0] + " IN (" + comma_part + ")";
    }

    public string Quoteify(string[] lines)
    {
      string result = string.Empty;

      for (int i = 0; i < lines.Length - 1; i++)
        result += "\"" + lines[i] + " \" & _ \r\n";

      result += "\"" + lines[lines.Length - 1] + "\"";

      return result;
    }

    public string Unquoteify(string[] lines)
    {
      string result = string.Empty;

      foreach (string line in lines)
      {
        string temp = line.Replace("\"", String.Empty);
        temp = temp.Replace("&", String.Empty);
        temp = temp.Replace("_", String.Empty);

        result = temp;
      }
      
      return result;
    }

    public string[] RemoveSpacesFromList(string[] givenLis)
    {
      string[] newLis = new string[givenLis.Length];

      for (int i = 0; i < givenLis.Length; i++)
        newLis[i] = givenLis[i].Replace(" ", string.Empty);

      return newLis;
    }

    private void comboBox1_SelectedIndexChanged(object sender, EventArgs e)
    {
      button1.Text = comboBox1.Text;
    }
  }
}
